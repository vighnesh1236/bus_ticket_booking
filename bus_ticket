import { useState } from 'react';
import { Calendar, Clock, Search, Plus, Minus } from 'lucide-react';

interface Bus {
  id: number;
  name: string;
  time: string;
  seats: number;
  price: number;
}

const buses: Bus[] = [
  { id: 1, name: 'Bus 1', time: '08:00 AM', seats: 20, price: 10 },
  { id: 2, name: 'Bus 2', time: '10:00 AM', seats: 30, price: 15 },
  { id: 3, name: 'Bus 3', time: '12:00 PM', seats: 40, price: 20 },
];

const BusTicketBookingApp = () => {
  const [search, setSearch] = useState('');
  const [selectedBus, setSelectedBus] = useState<Bus | null>(null);
  const [seats, setSeats] = useState(1);
  const [totalPrice, setTotalPrice] = useState(0);

  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSearch(e.target.value);
  };

  const handleSelectBus = (bus: Bus) => {
    setSelectedBus(bus);
    setTotalPrice(bus.price * seats);
  };

  const handleIncrementSeats = () => {
    setSeats(seats + 1);
    if (selectedBus) {
      setTotalPrice(selectedBus.price * (seats + 1));
    }
  };

  const handleDecrementSeats = () => {
    if (seats > 1) {
      setSeats(seats - 1);
      if (selectedBus) {
        setTotalPrice(selectedBus.price * (seats - 1));
      }
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-4">
      <h1 className="text-3xl font-bold mb-4">Bus Ticket Booking App</h1>
      <div className="flex justify-between mb-4">
        <input
          type="search"
          value={search}
          onChange={handleSearch}
          placeholder="Search for buses"
          className="w-full p-2 pl-10 text-sm text-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-600"
        />
        <Search className="w-6 h-6 text-gray-700" />
      </div>
      <div className="flex flex-col mb-4">
        {buses
          .filter((bus) => bus.name.toLowerCase().includes(search.toLowerCase()))
          .map((bus) => (
            <div
              key={bus.id}
              className="flex justify-between p-4 border-b border-gray-200 cursor-pointer"
              onClick={() => handleSelectBus(bus)}
            >
              <div className="flex items-center">
                <div className="bg-gray-200 border-2 border-dashed rounded-xl w-16 h-16" />
                <div className="ml-4">
                  <h2 className="text-lg font-bold">{bus.name}</h2>
                  <p className="text-sm text-gray-600">{bus.time}</p>
                </div>
              </div>
              <div className="flex items-center">
                <p className="text-lg font-bold">${bus.price}</p>
                <p className="text-sm text-gray-600">({bus.seats} seats available)</p>
              </div>
            </div>
          ))}
      </div>
      {selectedBus && (
        <div className="flex justify-between p-4 border border-gray-200 rounded-lg mb-4">
          <div className="flex items-center">
            <h2 className="text-lg font-bold">{selectedBus.name}</h2>
            <p className="text-sm text-gray-600">{selectedBus.time}</p>
          </div>
          <div className="flex items-center">
            <button
              className="p-2 text-gray-600 hover:text-gray-900"
              onClick={handleDecrementSeats}
            >
              <Minus className="w-4 h-4" />
            </button>
            <p className="text-lg font-bold mx-2">{seats}</p>
            <button
              className="p-2 text-gray-600 hover:text-gray-900"
              onClick={handleIncrementSeats}
            >
              <Plus className="w-4 h-4" />
            </button>
          </div>
          <div className="flex items-center">
            <p className="text-lg font-bold">Total: ${totalPrice}</p>
          </div>
        </div>
      )}
      <button
        className="w-full p-4 text-lg font-bold text-white bg-blue-500 rounded-lg hover:bg-blue-700"
        onClick={() => alert('Booking successful!')}
      >
        Book Now
      </button>
    </div>
  );
};

export default BusTicketBookingApp;
